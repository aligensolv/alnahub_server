{"level":"error","message":"Cannot find module 'E:\\workspace\\projects\\alna_caffee\\alna_server\\utils\\mongoose_connection.js' imported from E:\\workspace\\projects\\alna_caffee\\alna_server\\server.js","timestamp":"2024-04-22 20:28:21"}
{"level":"error","message":"Cannot find module 'E:\\workspace\\projects\\alna_caffee\\alna_server\\utils\\mongoose_connection.js' imported from E:\\workspace\\projects\\alna_caffee\\alna_server\\server.js","timestamp":"2024-04-22 20:28:34"}
{"level":"error","message":"port is not defined","timestamp":"2024-04-22 22:44:32"}
{"level":"error","message":"prisma is not defined","timestamp":"2024-04-23 18:19:51"}
{"level":"error","message":"The argument 'options' is invalid. Received { port: false }","timestamp":"2024-04-23 18:20:13"}
{"level":"error","message":"The argument 'options' is invalid. Received { port: false }","timestamp":"2024-04-23 18:20:17"}
{"level":"error","message":"\nInvalid `prisma.category.update()` invocation:\n\n{\n  where: {\n    id: \"1\"\n        ~~~\n  },\n  data: {\n    name: \"Cakes\",\n    image: undefined\n  }\n}\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-04-23 23:08:28"}
{"level":"error","message":"\nInvalid `prisma.category.update()` invocation:\n\n{\n  where: {\n    id: \"1\"\n        ~~~\n  },\n  data: {\n    name: \"Cakes\",\n    image: undefined\n  }\n}\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-04-23 23:08:28"}
{"level":"error","message":"ProductRepository is not defined","timestamp":"2024-04-24 03:15:12"}
{"level":"error","message":"ProductRepository is not defined","timestamp":"2024-04-24 03:15:12"}
{"level":"error","message":"Product image is missing","timestamp":"2024-04-24 03:15:29"}
{"level":"error","message":"Product image is missing","timestamp":"2024-04-24 03:47:39"}
{"level":"error","message":"Product image is missing","timestamp":"2024-04-24 03:47:40"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\projects\\alna_caffee\\alna_server\\public\\images\\products\\product_S1SVj8V6Y8.png'","timestamp":"2024-04-24 05:33:48"}
{"level":"error","message":"image is not defined","timestamp":"2024-04-24 05:34:10"}
{"level":"error","message":"image is not defined","timestamp":"2024-04-24 05:34:10"}
{"level":"error","message":"static_files_host is not defined","timestamp":"2024-04-24 05:34:26"}
{"level":"error","message":"static_files_host is not defined","timestamp":"2024-04-24 05:34:26"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_MAOwwMvAjw.png\",\n    category_id: undefined,\n    created_at: \"24-04-2024 05:34:35\",\n+   category: {\n+     create: CategoryCreateWithoutProductsInput | CategoryUncheckedCreateWithoutProductsInput,\n+     connectOrCreate: CategoryCreateOrConnectWithoutProductsInput,\n+     connect: CategoryWhereUniqueInput\n+   }\n  }\n}\n\nArgument `category` is missing.","timestamp":"2024-04-24 05:34:35"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_MAOwwMvAjw.png\",\n    category_id: undefined,\n    created_at: \"24-04-2024 05:34:35\",\n+   category: {\n+     create: CategoryCreateWithoutProductsInput | CategoryUncheckedCreateWithoutProductsInput,\n+     connectOrCreate: CategoryCreateOrConnectWithoutProductsInput,\n+     connect: CategoryWhereUniqueInput\n+   }\n  }\n}\n\nArgument `category` is missing.","timestamp":"2024-04-24 05:34:35"}
{"level":"error","message":"\nInvalid `prisma.category.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   name?: String,\n?   AND?: CategoryWhereInput | CategoryWhereInput[],\n?   OR?: CategoryWhereInput[],\n?   NOT?: CategoryWhereInput | CategoryWhereInput[],\n?   image?: StringFilter | String,\n?   free_gift_counter?: IntFilter | Int,\n?   created_at?: StringFilter | String,\n?   products?: ProductListRelationFilter\n  }\n}\n\nArgument `where` of type CategoryWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.","timestamp":"2024-04-24 05:35:16"}
{"level":"error","message":"\nInvalid `prisma.category.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   name?: String,\n?   AND?: CategoryWhereInput | CategoryWhereInput[],\n?   OR?: CategoryWhereInput[],\n?   NOT?: CategoryWhereInput | CategoryWhereInput[],\n?   image?: StringFilter | String,\n?   free_gift_counter?: IntFilter | Int,\n?   created_at?: StringFilter | String,\n?   products?: ProductListRelationFilter\n  }\n}\n\nArgument `where` of type CategoryWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.","timestamp":"2024-04-24 05:35:16"}
{"level":"error","message":"\nInvalid `prisma.category.findUnique()` invocation:\n\n{\n  where: {\n    id: \"2\"\n        ~~~\n  }\n}\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-04-24 05:36:00"}
{"level":"error","message":"\nInvalid `prisma.category.findUnique()` invocation:\n\n{\n  where: {\n    id: \"2\"\n        ~~~\n  }\n}\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-04-24 05:36:00"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_hEweoSV8gV.png\",\n    category: {\n      id: 2,\n      ~~\n      name: \"Coffee\",\n      image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_UootwpXvvg.png\",\n      free_gift_counter: 5,\n      created_at: \"\",\n?     create?: CategoryCreateWithoutProductsInput | CategoryUncheckedCreateWithoutProductsInput,\n?     connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput,\n?     connect?: CategoryWhereUniqueInput\n    },\n    created_at: \"24-04-2024 05:36:17\"\n  }\n}\n\nUnknown argument `id`. Available options are marked with ?.","timestamp":"2024-04-24 05:36:17"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_hEweoSV8gV.png\",\n    category: {\n      id: 2,\n      ~~\n      name: \"Coffee\",\n      image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_UootwpXvvg.png\",\n      free_gift_counter: 5,\n      created_at: \"\",\n?     create?: CategoryCreateWithoutProductsInput | CategoryUncheckedCreateWithoutProductsInput,\n?     connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput,\n?     connect?: CategoryWhereUniqueInput\n    },\n    created_at: \"24-04-2024 05:36:17\"\n  }\n}\n\nUnknown argument `id`. Available options are marked with ?.","timestamp":"2024-04-24 05:36:17"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_oo3AyPjyFa.png\",\n    category: {\n      id: 2,\n      ~~\n      name: \"Coffee\",\n      image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_UootwpXvvg.png\",\n      free_gift_counter: 5,\n      created_at: \"\",\n?     create?: CategoryCreateWithoutProductsInput | CategoryUncheckedCreateWithoutProductsInput,\n?     connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput,\n?     connect?: CategoryWhereUniqueInput\n    },\n    category_id: \"2\",\n    created_at: \"24-04-2024 05:39:02\"\n  }\n}\n\nUnknown argument `id`. Available options are marked with ?.","timestamp":"2024-04-24 05:39:02"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_oo3AyPjyFa.png\",\n    category: {\n      id: 2,\n      ~~\n      name: \"Coffee\",\n      image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_UootwpXvvg.png\",\n      free_gift_counter: 5,\n      created_at: \"\",\n?     create?: CategoryCreateWithoutProductsInput | CategoryUncheckedCreateWithoutProductsInput,\n?     connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput,\n?     connect?: CategoryWhereUniqueInput\n    },\n    category_id: \"2\",\n    created_at: \"24-04-2024 05:39:02\"\n  }\n}\n\nUnknown argument `id`. Available options are marked with ?.","timestamp":"2024-04-24 05:39:02"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_6edi03ZIYw.png\",\n    category_id: \"2\",\n                 ~~~\n    created_at: \"24-04-2024 05:39:34\"\n  }\n}\n\nArgument `category_id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-04-24 05:39:35"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"plain coffee\",\n    price: 3.2,\n    description: \"a good quality coffee\",\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_6edi03ZIYw.png\",\n    category_id: \"2\",\n                 ~~~\n    created_at: \"24-04-2024 05:39:34\"\n  }\n}\n\nArgument `category_id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-04-24 05:39:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:42:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:42:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n    category_id: \"1\"\n                 ~~~\n  }\n}\n\nArgument `category_id`: Invalid value provided. Expected IntFilter or Int, provided String.","timestamp":"2024-04-24 05:42:56"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n    category_id: \"1\"\n                 ~~~\n  }\n}\n\nArgument `category_id`: Invalid value provided. Expected IntFilter or Int, provided String.","timestamp":"2024-04-24 05:42:56"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:06"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:07"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:08"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:09"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:10"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:11"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:12"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:13"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:14"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:16"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:17"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:27"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:27"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:27"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-24 05:48:27"}
{"level":"error","message":"Product image is missing","timestamp":"2024-04-24 06:14:58"}
{"level":"error","message":"Product image is missing","timestamp":"2024-04-24 06:18:40"}
{"level":"error","message":"\nInvalid `prisma.category.create()` invocation:\n\n{\n  data: {\n    name: \"Salts\",\n    image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_Cx64asM0q5.png\",\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-04-24 18:09:26"}
{"level":"error","message":"\nInvalid `prisma.category.create()` invocation:\n\n{\n  data: {\n    name: \"Salts\",\n    image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_Cx64asM0q5.png\",\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-04-24 18:09:26"}
{"level":"error","message":"\nInvalid `prisma.category.create()` invocation:\n\n{\n  data: {\n    name: \"Appetizers\",\n    image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_RETM0IaGp2.png\",\n    created_at: \"25-04-2024 00:01:41\",\n+   free_gift_counter: Int\n  }\n}\n\nArgument `free_gift_counter` is missing.","timestamp":"2024-04-25 00:01:41"}
{"level":"error","message":"\nInvalid `prisma.category.create()` invocation:\n\n{\n  data: {\n    name: \"Appetizers\",\n    image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_RETM0IaGp2.png\",\n    created_at: \"25-04-2024 00:01:41\",\n+   free_gift_counter: Int\n  }\n}\n\nArgument `free_gift_counter` is missing.","timestamp":"2024-04-25 00:01:41"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:18"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:21"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:21"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:24"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:24"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:31"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:31"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:32"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:32"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:34"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:34"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:37"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  where: {\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-26 21:26:37"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-04-28 00:34:53"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-04-28 00:34:53"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:35:52\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:35:52"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:35:52\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:35:52"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:36:26\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:36:26"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:36:26\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:36:26"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:36:45\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:36:45"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:36:45\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:36:45"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:37:09\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:37:09"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n{\n  data: {\n    created_at: \"28-04-2024 00:37:09\",\n+   phone_number: String\n  }\n}\n\nArgument `phone_number` is missing.","timestamp":"2024-04-28 00:37:09"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 00:37:45"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 00:37:45"}
{"level":"error","message":"products.reduce is not a function","timestamp":"2024-04-28 00:38:25"}
{"level":"error","message":"products.reduce is not a function","timestamp":"2024-04-28 00:38:25"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n{\n  where: {\n    phone_number: undefined,\n?   id?: Int,\n?   AND?: ClientWhereInput | ClientWhereInput[],\n?   OR?: ClientWhereInput[],\n?   NOT?: ClientWhereInput | ClientWhereInput[],\n?   created_at?: StringFilter | String,\n?   orders?: OrderListRelationFilter,\n?   gifts?: GiftListRelationFilter,\n?   category_purchases?: ClientCategoryPurchaseListRelationFilter\n  },\n  include: {\n    category_purchases: true\n  }\n}\n\nArgument `where` of type ClientWhereUniqueInput needs at least one of `id` or `phone_number` arguments. Available options are marked with ?.","timestamp":"2024-04-28 05:35:54"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n{\n  where: {\n    phone_number: undefined,\n?   id?: Int,\n?   AND?: ClientWhereInput | ClientWhereInput[],\n?   OR?: ClientWhereInput[],\n?   NOT?: ClientWhereInput | ClientWhereInput[],\n?   created_at?: StringFilter | String,\n?   orders?: OrderListRelationFilter,\n?   gifts?: GiftListRelationFilter,\n?   category_purchases?: ClientCategoryPurchaseListRelationFilter\n  },\n  include: {\n    category_purchases: true\n  }\n}\n\nArgument `where` of type ClientWhereUniqueInput needs at least one of `id` or `phone_number` arguments. Available options are marked with ?.","timestamp":"2024-04-28 05:35:54"}
{"level":"error","message":"Phone number is missing","timestamp":"2024-04-28 05:36:32"}
{"level":"error","message":"Client with phone number 1515 not found","timestamp":"2024-04-28 05:36:46"}
{"level":"error","message":"Client with phone number 1515 not found","timestamp":"2024-04-28 05:36:46"}
{"level":"error","message":"Client with phone number 624624 not found","timestamp":"2024-04-28 05:45:47"}
{"level":"error","message":"Client with phone number 624624 not found","timestamp":"2024-04-28 05:45:47"}
{"level":"error","message":"Class constructor ClientCategoryPurchaseRepository cannot be invoked without 'new'","timestamp":"2024-04-28 06:17:17"}
{"level":"error","message":"Class constructor ClientCategoryPurchaseRepository cannot be invoked without 'new'","timestamp":"2024-04-28 06:17:17"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-04-28 06:17:33"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-04-28 06:17:33"}
{"level":"error","message":"clientCategoryPurchase is not defined","timestamp":"2024-04-28 06:17:45"}
{"level":"error","message":"clientCategoryPurchase is not defined","timestamp":"2024-04-28 06:17:45"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-04-28 07:04:13"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-04-28 07:04:13"}
{"level":"error","message":"result is not defined","timestamp":"2024-04-28 07:39:36"}
{"level":"error","message":"result is not defined","timestamp":"2024-04-28 07:39:36"}
{"level":"error","message":"\nInvalid `prisma.gift.create()` invocation:\n\n{\n  data: {\n    phone_number: \"12\",\n    created_at: \"28-04-2024 07:40:05\",\n    status: \"pending\",\n    code: \"9989309892\",\n    type: \"friend\",\n+   category: String\n  }\n}\n\nArgument `category` is missing.","timestamp":"2024-04-28 07:40:05"}
{"level":"error","message":"\nInvalid `prisma.gift.create()` invocation:\n\n{\n  data: {\n    phone_number: \"12\",\n    created_at: \"28-04-2024 07:40:05\",\n    status: \"pending\",\n    code: \"9989309892\",\n    type: \"friend\",\n+   category: String\n  }\n}\n\nArgument `category` is missing.","timestamp":"2024-04-28 07:40:05"}
{"level":"error","message":"\nInvalid `prisma.gift.create()` invocation:\n\n{\n  data: {\n    phone_number: \"12\",\n    created_at: \"28-04-2024 07:40:40\",\n    status: \"pending\",\n    code: \"4493608454\",\n    type: \"friend\",\n    category: \"coffee\",\n+   client: {\n+     create: ClientCreateWithoutGiftsInput | ClientUncheckedCreateWithoutGiftsInput,\n+     connectOrCreate: ClientCreateOrConnectWithoutGiftsInput,\n+     connect: ClientWhereUniqueInput\n+   }\n  }\n}\n\nArgument `client` is missing.","timestamp":"2024-04-28 07:40:40"}
{"level":"error","message":"\nInvalid `prisma.gift.create()` invocation:\n\n{\n  data: {\n    phone_number: \"12\",\n    created_at: \"28-04-2024 07:40:40\",\n    status: \"pending\",\n    code: \"4493608454\",\n    type: \"friend\",\n    category: \"coffee\",\n+   client: {\n+     create: ClientCreateWithoutGiftsInput | ClientUncheckedCreateWithoutGiftsInput,\n+     connectOrCreate: ClientCreateOrConnectWithoutGiftsInput,\n+     connect: ClientWhereUniqueInput\n+   }\n  }\n}\n\nArgument `client` is missing.","timestamp":"2024-04-28 07:40:40"}
{"level":"error","message":"\nInvalid `prisma.gift.create()` invocation:\n\n{\n  data: {\n    phone_number: \"12\",\n    ~~~~~~~~~~~~\n    created_at: \"28-04-2024 07:42:42\",\n    status: \"pending\",\n    code: \"8573524088\",\n    type: \"friend\",\n    category: \"coffee\",\n    client_id: 3,\n?   id?: Int\n  }\n}\n\nUnknown argument `phone_number`. Available options are marked with ?.","timestamp":"2024-04-28 07:42:42"}
{"level":"error","message":"\nInvalid `prisma.gift.create()` invocation:\n\n{\n  data: {\n    phone_number: \"12\",\n    ~~~~~~~~~~~~\n    created_at: \"28-04-2024 07:42:42\",\n    status: \"pending\",\n    code: \"8573524088\",\n    type: \"friend\",\n    category: \"coffee\",\n    client_id: 3,\n?   id?: Int\n  }\n}\n\nUnknown argument `phone_number`. Available options are marked with ?.","timestamp":"2024-04-28 07:42:42"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 07:43:09"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 07:43:09"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 07:44:29"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 07:44:29"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 07:46:06"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Client_phone_number_key`","timestamp":"2024-04-28 07:46:06"}
{"level":"error","message":"\nInvalid `prisma.clientCategoryPurchase.findFirst()` invocation:\n\n{\n  where: {\n    client_id: 1,\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-28 18:48:31"}
{"level":"error","message":"\nInvalid `prisma.clientCategoryPurchase.findFirst()` invocation:\n\n{\n  where: {\n    client_id: 1,\n+   category_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    category: true\n  }\n}\n\nArgument `category_id` is missing.","timestamp":"2024-04-28 18:48:31"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-04-28 18:50:52"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-04-28 18:50:52"}
{"level":"error","message":"Client with phone number 4740088605 not found","timestamp":"2024-04-28 19:34:26"}
{"level":"error","message":"Client with phone number 4740088605 not found","timestamp":"2024-04-28 19:34:26"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 21:56:45"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 21:56:45"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 21:56:50"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 21:56:50"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:41:27"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:41:27"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:41:48"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:41:48"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:41:48"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:41:48"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:44:37"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:44:37"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:44:41"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:44:41"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:44:59"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-02 22:44:59"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-03 02:29:40"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-03 02:29:40"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-03 02:29:40"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","timestamp":"2024-05-03 02:29:40"}
{"level":"error","message":"Phone number is missing","timestamp":"2024-05-03 02:41:40"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-05-03 06:28:36"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-05-03 06:28:36"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-05-03 06:28:36"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-05-03 06:28:36"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:33:54\",\n    status: \"pending\",\n    code: \"9822430072\",\n    type: \"friend\",\n    category: \"coffee\",\n    client_id: 1,\n+   sender: String\n  }\n}\n\nArgument `sender` is missing.","timestamp":"2024-05-03 06:33:54"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:33:54\",\n    status: \"pending\",\n    code: \"9822430072\",\n    type: \"friend\",\n    category: \"coffee\",\n    client_id: 1,\n+   sender: String\n  }\n}\n\nArgument `sender` is missing.","timestamp":"2024-05-03 06:33:54"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:35:33\",\n    sender: \"201150421159\",\n    reciever: \"201150421159\",\n    status: \"pending\",\n    code: \"1802184285\",\n    category: \"coffee\",\n+   product: String\n  }\n}\n\nArgument `product` is missing.","timestamp":"2024-05-03 06:35:33"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:35:33\",\n    sender: \"201150421159\",\n    reciever: \"201150421159\",\n    status: \"pending\",\n    code: \"1802184285\",\n    category: \"coffee\",\n+   product: String\n  }\n}\n\nArgument `product` is missing.","timestamp":"2024-05-03 06:35:33"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:40:24\",\n    sender: \"201150421159\",\n    reciever: \"201150421159\",\n    status: \"pending\",\n    code: \"4049556213\",\n    category: \"coffee\",\n+   product: String\n  }\n}\n\nArgument `product` is missing.","timestamp":"2024-05-03 06:40:24"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:40:24\",\n    sender: \"201150421159\",\n    reciever: \"201150421159\",\n    status: \"pending\",\n    code: \"4049556213\",\n    category: \"coffee\",\n+   product: String\n  }\n}\n\nArgument `product` is missing.","timestamp":"2024-05-03 06:40:24"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:42:46\",\n    sender: \"201150421159\",\n    reciever: \"201150421159\",\n    status: \"pending\",\n    code: \"2892380066\",\n    category: \"Cakes\",\n    product: \"normal cake\",\n    price: 20\n           ~~\n  }\n}\n\nArgument `price`: Invalid value provided. Expected String, provided Int.","timestamp":"2024-05-03 06:42:46"}
{"level":"error","message":"\nInvalid `prisma.friendGift.create()` invocation:\n\n{\n  data: {\n    created_at: \"03-05-2024 06:42:46\",\n    sender: \"201150421159\",\n    reciever: \"201150421159\",\n    status: \"pending\",\n    code: \"2892380066\",\n    category: \"Cakes\",\n    product: \"normal cake\",\n    price: 20\n           ~~\n  }\n}\n\nArgument `price`: Invalid value provided. Expected String, provided Int.","timestamp":"2024-05-03 06:42:46"}
{"level":"error","message":"getaddrinfo EAI_AGAIN rest.nexmo.com","timestamp":"2024-05-04 10:28:21"}
{"level":"error","message":"getaddrinfo EAI_AGAIN rest.nexmo.com","timestamp":"2024-05-04 10:28:21"}
{"level":"error","message":"getaddrinfo EAI_AGAIN rest.nexmo.com","timestamp":"2024-05-04 10:33:54"}
{"level":"error","message":"getaddrinfo EAI_AGAIN rest.nexmo.com","timestamp":"2024-05-04 10:33:54"}
{"level":"error","message":"\nInvalid `prisma.freeGift.create()` invocation:\n\n{\n  data: {\n    product: 1,\n             ~\n    client: \"201150421159\",\n    code: \"2782264111\",\n    created_at: \"04-05-2024 10:53:42\",\n    status: \"pending\",\n    price: 30\n  }\n}\n\nArgument `product`: Invalid value provided. Expected ProductCreateNestedOneWithoutFree_giftsInput, provided Int.","timestamp":"2024-05-04 10:53:42"}
{"level":"error","message":"\nInvalid `prisma.freeGift.create()` invocation:\n\n{\n  data: {\n    product: 1,\n             ~\n    client: \"201150421159\",\n    code: \"2782264111\",\n    created_at: \"04-05-2024 10:53:42\",\n    status: \"pending\",\n    price: 30\n  }\n}\n\nArgument `product`: Invalid value provided. Expected ProductCreateNestedOneWithoutFree_giftsInput, provided Int.","timestamp":"2024-05-04 10:53:42"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 10:55:06"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 10:55:06"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n    product_id: \"1\"\n                ~~~\n  }\n}\n\nArgument `product_id`: Invalid value provided. Expected IntFilter or Int, provided String.","timestamp":"2024-05-04 11:04:50"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n    product_id: \"1\"\n                ~~~\n  }\n}\n\nArgument `product_id`: Invalid value provided. Expected IntFilter or Int, provided String.","timestamp":"2024-05-04 11:04:50"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:05"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:05"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:05"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:05"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:25"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:25"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:27"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:27"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:30"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:30"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:42"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:42"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:56"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:56"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:56"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:06:56"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:01"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:01"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:09"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:09"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:20"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:20"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:30"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:30"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:34"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:34"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:40"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:40"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:42"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:42"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:44"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:44"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:46"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:46"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:48"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:07:48"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:15"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:15"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:15"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:15"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:23"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:23"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:28"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:28"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:28"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:08:28"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:24"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:24"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:24"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:21:24"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:22:53"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:22:53"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:22:56"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:22:56"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:22:58"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:22:58"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:23:00"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:23:00"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:24:45"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:24:45"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:24:45"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:24:45"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:25:55"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:25:55"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:25:55"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:25:55"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:00"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:00"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:00"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:00"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:06"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:06"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:06"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    status: \"verified\",\n+   product_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `product_id` is missing.","timestamp":"2024-05-04 11:26:06"}
{"level":"error","message":"phone_number is not defined","timestamp":"2024-05-04 11:51:23"}
{"level":"error","message":"phone_number is not defined","timestamp":"2024-05-04 11:51:23"}
{"level":"error","message":"phone_number is not defined","timestamp":"2024-05-04 11:52:15"}
{"level":"error","message":"phone_number is not defined","timestamp":"2024-05-04 11:52:15"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 11:52:31"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 11:52:31"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        status: \"pending\"\n      },\n      {\n        status: \"verified\"\n      }\n    ]\n  },\n  orderBy: \"created_at\"\n           ~~~~~~~~~~~~\n}\n\nArgument `orderBy`: Invalid value provided. Expected FreeGiftOrderByWithRelationInput[] or FreeGiftOrderByWithRelationInput, provided String.","timestamp":"2024-05-04 12:02:23"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        status: \"pending\"\n      },\n      {\n        status: \"verified\"\n      }\n    ]\n  },\n  orderBy: \"created_at\"\n           ~~~~~~~~~~~~\n}\n\nArgument `orderBy`: Invalid value provided. Expected FreeGiftOrderByWithRelationInput[] or FreeGiftOrderByWithRelationInput, provided String.","timestamp":"2024-05-04 12:02:23"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        status: \"pending\"\n      },\n      {\n        status: \"verified\"\n      }\n    ]\n  },\n  orderBy: \"created_at\"\n           ~~~~~~~~~~~~\n}\n\nArgument `orderBy`: Invalid value provided. Expected FreeGiftOrderByWithRelationInput[] or FreeGiftOrderByWithRelationInput, provided String.","timestamp":"2024-05-04 12:02:23"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        status: \"pending\"\n      },\n      {\n        status: \"verified\"\n      }\n    ]\n  },\n  orderBy: \"created_at\"\n           ~~~~~~~~~~~~\n}\n\nArgument `orderBy`: Invalid value provided. Expected FreeGiftOrderByWithRelationInput[] or FreeGiftOrderByWithRelationInput, provided String.","timestamp":"2024-05-04 12:02:23"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:33:56"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:33:56"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:37:13"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:37:13"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:38:17"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:38:17"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:39:31"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:39:31"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:40:38"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:40:38"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:42:50"}
{"level":"error","message":"getaddrinfo ENOTFOUND rest.nexmo.com","timestamp":"2024-05-04 12:42:50"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nAuthentication failed against database server at `89.117.102.8`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `89.117.102.8`.","timestamp":"2024-05-04 16:03:53"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nAuthentication failed against database server at `89.117.102.8`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `89.117.102.8`.","timestamp":"2024-05-04 16:03:53"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nAuthentication failed against database server at `89.117.102.8`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `89.117.102.8`.","timestamp":"2024-05-04 16:03:54"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nAuthentication failed against database server at `89.117.102.8`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `89.117.102.8`.","timestamp":"2024-05-04 16:03:54"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nAuthentication failed against database server at `srv1043.hstgr.io`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `srv1043.hstgr.io`.","timestamp":"2024-05-04 16:04:37"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nAuthentication failed against database server at `srv1043.hstgr.io`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `srv1043.hstgr.io`.","timestamp":"2024-05-04 16:04:37"}
{"level":"error","message":"\nInvalid `prisma.category.findMany()` invocation:\n\n\nAuthentication failed against database server at `89.117.102.8`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `89.117.102.8`.","timestamp":"2024-05-04 17:00:41"}
{"level":"error","message":"\nInvalid `prisma.category.findMany()` invocation:\n\n\nAuthentication failed against database server at `89.117.102.8`, the provided database credentials for `u468338872_alna` are not valid.\n\nPlease make sure to provide valid database credentials for the database server at `89.117.102.8`.","timestamp":"2024-05-04 17:00:41"}
{"level":"error","message":"\nInvalid `prisma.category.create()` invocation:\n\n{\n  data: {\n    name: \"Salts\",\n    image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_aEUSeuWPxq.png\",\n    created_at: \"04-05-2024 18:24:55\",\n+   free_gift_counter: Int\n  }\n}\n\nArgument `free_gift_counter` is missing.","timestamp":"2024-05-04 18:24:55"}
{"level":"error","message":"\nInvalid `prisma.category.create()` invocation:\n\n{\n  data: {\n    name: \"Salts\",\n    image: \"http://localhost:3000/public\\\\images\\\\categories\\\\category_aEUSeuWPxq.png\",\n    created_at: \"04-05-2024 18:24:55\",\n+   free_gift_counter: Int\n  }\n}\n\nArgument `free_gift_counter` is missing.","timestamp":"2024-05-04 18:24:55"}
{"level":"error","message":"secretOrPrivateKey must have a value","timestamp":"2024-05-14 14:56:32"}
{"level":"error","message":"secretOrPrivateKey must have a value","timestamp":"2024-05-14 14:56:32"}
{"level":"error","message":"secretOrPrivateKey must have a value","timestamp":"2024-05-14 14:56:35"}
{"level":"error","message":"secretOrPrivateKey must have a value","timestamp":"2024-05-14 14:56:35"}
{"level":"error","message":"secretOrPrivateKey must have a value","timestamp":"2024-05-14 14:57:33"}
{"level":"error","message":"secretOrPrivateKey must have a value","timestamp":"2024-05-14 14:57:33"}
{"level":"error","message":"er is not defined","timestamp":"2024-05-14 15:26:21"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"ty\",\n    price: NaN,\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_6GL1GpA7IU.jpg\",\n    category_id: 1,\n    created_at: \"17-05-2024 06:37:19\",\n    has_gift: true,\n+   description: String\n  }\n}\n\nArgument `description` is missing.","timestamp":"2024-05-17 06:37:19"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"ty\",\n    price: NaN,\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_6GL1GpA7IU.jpg\",\n    category_id: 1,\n    created_at: \"17-05-2024 06:37:19\",\n    has_gift: true,\n+   description: String\n  }\n}\n\nArgument `description` is missing.","timestamp":"2024-05-17 06:37:19"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"ty\",\n    price: NaN,\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_MVwhjp5elQ.jpg\",\n    category_id: 1,\n    created_at: \"17-05-2024 06:37:21\",\n    has_gift: true,\n+   description: String\n  }\n}\n\nArgument `description` is missing.","timestamp":"2024-05-17 06:37:21"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"ty\",\n    price: NaN,\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_MVwhjp5elQ.jpg\",\n    category_id: 1,\n    created_at: \"17-05-2024 06:37:21\",\n    has_gift: true,\n+   description: String\n  }\n}\n\nArgument `description` is missing.","timestamp":"2024-05-17 06:37:21"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"ty\",\n    price: NaN,\n    ~~~~~\n    description: undefined,\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_Qcb5KOc4rO.jpg\",\n    category_id: 1,\n    created_at: \"17-05-2024 06:38:13\",\n    has_gift: true,\n?   id?: Int,\n?   free_gifts?: FreeGiftUncheckedCreateNestedManyWithoutProductInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","timestamp":"2024-05-17 06:38:13"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"ty\",\n    price: NaN,\n    ~~~~~\n    description: undefined,\n    image: \"http://localhost:3000/public\\\\images\\\\products\\\\product_Qcb5KOc4rO.jpg\",\n    category_id: 1,\n    created_at: \"17-05-2024 06:38:13\",\n    has_gift: true,\n?   id?: Int,\n?   free_gifts?: FreeGiftUncheckedCreateNestedManyWithoutProductInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","timestamp":"2024-05-17 06:38:13"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    client_id: 1,\n    products: [\n      {\n        product: \"coffee with milk\",\n        quantity: 1,\n        category: \"Coffee\",\n        category_id: 1\n      }\n    ],\n    created_at: \"17-05-2024 19:50:03\",\n    status: \"pending\",\n    total_price: NaN,\n    ~~~~~~~~~~~\n?   id?: Int\n  },\n  include: {\n    client: true\n  }\n}\n\nUnknown argument `total_price`. Available options are marked with ?.","timestamp":"2024-05-17 19:50:03"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    client_id: 1,\n    products: [\n      {\n        product: \"coffee with milk\",\n        quantity: 1,\n        category: \"Coffee\",\n        category_id: 1\n      }\n    ],\n    created_at: \"17-05-2024 19:50:03\",\n    status: \"pending\",\n    total_price: NaN,\n    ~~~~~~~~~~~\n?   id?: Int\n  },\n  include: {\n    client: true\n  }\n}\n\nUnknown argument `total_price`. Available options are marked with ?.","timestamp":"2024-05-17 19:50:03"}
{"level":"error","message":"firend_gift is not defined","timestamp":"2024-05-17 20:12:46"}
{"level":"error","message":"firend_gift is not defined","timestamp":"2024-05-17 20:12:46"}
{"level":"error","message":"\nInvalid `prisma.freeGiftRequest.create()` invocation:\n\n{\n  data: {\n    created_at: \"17-05-2024 21:12:19\",\n    ~~~~~~~~~~\n    requested_by: \"513513\",\n    requested_at: \"17-05-2024 21:12:19\",\n    request_status: \"pending\",\n    product: \"coffee with milk\",\n    product_id: 1\n  }\n}\n\nUnknown argument `created_at`. Available options are marked with ?.","timestamp":"2024-05-17 21:12:19"}
{"level":"error","message":"\nInvalid `prisma.freeGiftRequest.create()` invocation:\n\n{\n  data: {\n    created_at: \"17-05-2024 21:12:19\",\n    ~~~~~~~~~~\n    requested_by: \"513513\",\n    requested_at: \"17-05-2024 21:12:19\",\n    request_status: \"pending\",\n    product: \"coffee with milk\",\n    product_id: 1\n  }\n}\n\nUnknown argument `created_at`. Available options are marked with ?.","timestamp":"2024-05-17 21:12:19"}
{"level":"error","message":"\nInvalid `prisma.freeGift.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-05-17 21:21:21"}
{"level":"error","message":"\nInvalid `prisma.freeGift.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-05-17 21:21:21"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:50:47"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:50:47"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:50:47"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:50:47"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:50:53"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:50:53"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:34"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:34"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:34"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:34"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:35"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:36"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:36"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:36"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:36"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:43"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:43"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:43"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:43"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:52:44"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:15"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:40"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:40"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:40"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:40"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:41"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:41"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:41"}
{"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:53:41"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:36"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:36"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:45"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:45"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:45"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:45"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:56"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:55:56"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:56:22"}
{"level":"error","message":"\nInvalid `prisma.client.findUnique()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:56:22"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:56:48"}
{"level":"error","message":"\nInvalid `prisma.client.create()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 06:56:48"}
{"level":"error","message":"Cannot read properties of null (reading 'product')","timestamp":"2024-05-18 07:10:51"}
{"level":"error","message":"Cannot read properties of null (reading 'product')","timestamp":"2024-05-18 07:10:51"}
{"level":"error","message":"category is not defined","timestamp":"2024-05-18 07:11:49"}
{"level":"error","message":"category is not defined","timestamp":"2024-05-18 07:11:49"}
{"level":"error","message":"gift is not defined","timestamp":"2024-05-18 07:13:34"}
{"level":"error","message":"gift is not defined","timestamp":"2024-05-18 07:13:34"}
{"level":"error","message":"gift is not defined","timestamp":"2024-05-18 07:14:06"}
{"level":"error","message":"gift is not defined","timestamp":"2024-05-18 07:14:06"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:15:03"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:15:03"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:15:03"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:15:03"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:16:10"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:16:10"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:16:10"}
{"level":"error","message":"\nInvalid `prisma.freeGift.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'category'.","timestamp":"2024-05-18 07:16:10"}
{"level":"error","message":"\nInvalid `prisma.freeGift.update()` invocation:\n\n{\n  where: {\n    product_id: 1,\n?   id?: Int,\n?   AND?: FreeGiftWhereInput | FreeGiftWhereInput[],\n?   OR?: FreeGiftWhereInput[],\n?   NOT?: FreeGiftWhereInput | FreeGiftWhereInput[],\n?   client?: StringFilter | String,\n?   code?: StringFilter | String,\n?   status?: EnumGiftStatusFilter | GiftStatus,\n?   created_at?: StringFilter | String,\n?   product?: ProductRelationFilter | ProductWhereInput\n  },\n  data: {\n    status: \"verified\"\n  }\n}\n\nArgument `where` of type FreeGiftWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-05-18 07:27:53"}
{"level":"error","message":"\nInvalid `prisma.freeGift.update()` invocation:\n\n{\n  where: {\n    product_id: 1,\n?   id?: Int,\n?   AND?: FreeGiftWhereInput | FreeGiftWhereInput[],\n?   OR?: FreeGiftWhereInput[],\n?   NOT?: FreeGiftWhereInput | FreeGiftWhereInput[],\n?   client?: StringFilter | String,\n?   code?: StringFilter | String,\n?   status?: EnumGiftStatusFilter | GiftStatus,\n?   created_at?: StringFilter | String,\n?   product?: ProductRelationFilter | ProductWhereInput\n  },\n  data: {\n    status: \"verified\"\n  }\n}\n\nArgument `where` of type FreeGiftWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-05-18 07:27:53"}
{"level":"error","message":"\nInvalid `prisma.freeGift.delete()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n  ~~~~\n    status: \"verified\"\n  }\n}\n\nUnknown argument `data`. Available options are marked with ?.","timestamp":"2024-05-18 07:31:45"}
{"level":"error","message":"\nInvalid `prisma.freeGift.delete()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n  ~~~~\n    status: \"verified\"\n  }\n}\n\nUnknown argument `data`. Available options are marked with ?.","timestamp":"2024-05-18 07:31:45"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-05-18 21:20:31"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-05-18 21:20:31"}
